{"version":3,"sources":["scripts.js"],"names":["jQuery","$","Helper","target","offset","speed","timeout","container","isNaN","length","parseInt","top","setTimeout","animate","scrollTop","data","form","submitButton","errorsMessages","empty_value","phone_format","alphabets","incorrect_email","incorrect_country","zip_format","incorrect_city","incorrect_street","errors","ajaxurl","init","self","this","click","e","preventDefault","validateForm","post","serialize","action","response","success","alert","find","$this","$target","slideToggle","prop","on","value","val","attr","validate","autofillCityAndStreet","validateCurrentValue","removeError","each","fields","input","hasClass","test","setValid","setError","toLowerCase","message","$parent","parent","addClass","removeClass","remove","append","text","push","$country","$zip","$city","$street","parents","getZipInfo","info","place","province","country","zip","callback","getJSON","filter","element","zipcode","country_code","zipInfo"],"mappings":"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","file":"scripts.min.js","sourcesContent":["jQuery(function ($) {\r\n    const Helper = {\r\n        serializeForm: function ($form) {\r\n            let o = {},\r\n                a = $form.serializeArray();\r\n\r\n            if (!a.length) {\r\n                a = $form.find('input, select, textarea').serializeArray();\r\n            }\r\n\r\n            $.each(a, function () {\r\n                if (o[this.name]) {\r\n                    if (!o[this.name].push) {\r\n                        o[this.name] = [o[this.name]];\r\n                    }\r\n                    o[this.name].push(this.value || '');\r\n                } else {\r\n                    o[this.name] = this.value || '';\r\n                }\r\n            });\r\n            return o;\r\n        },\r\n        scrollTo: function (target, offset, speed, timeout, container) {\r\n            if (isNaN(target)) {\r\n\r\n                if (!(target instanceof jQuery)) {\r\n                    target = $(target);\r\n                }\r\n                if (!target.length) {\r\n                    return;\r\n                }\r\n                target = parseInt(target.offset().top);\r\n            }\r\n\r\n            container = container || 'html, body';\r\n            if (!(container instanceof jQuery)) {\r\n                container = $(container);\r\n            }\r\n\r\n\r\n            speed = speed || 500;\r\n            timeout = timeout || 0;\r\n            offset = offset || 0;\r\n\r\n            setTimeout(function () {\r\n                container.animate({\r\n                    scrollTop: target + offset\r\n                }, speed);\r\n            }, timeout);\r\n\r\n        },\r\n    };\r\n    const Checkout = {\r\n        data: [],\r\n        form: $('form.checkout'),\r\n        submitButton: $('.submit-checkout-form'),\r\n        errorsMessages: {\r\n            empty_value: 'Обов’язкове поле',\r\n            phone_format: 'Необхідно ввести номер у форматі +48',\r\n            alphabets: 'Необхідно використати A-z символи',\r\n            incorrect_email: 'У введеному email пропущені символи',\r\n            incorrect_country: 'Некоректна назва країни',\r\n            zip_format: 'Необхідно ввести код у форматі XX-XXX',\r\n            incorrect_city: 'Некоректна назва міста',\r\n            incorrect_street: 'Некоректна адреса',\r\n        },\r\n        errors: [],\r\n        ajaxurl: 'AJAX URL',\r\n        init: function () {\r\n            let self = this;\r\n\r\n            self.submitButton.click(function (e) {\r\n                e.preventDefault();\r\n                if (self.validateForm()) {\r\n                    $.post(self.ajaxurl, {\r\n                        data: self.form.serialize(),\r\n                        action: 'checkout',\r\n                    }, function (response) {\r\n                        if (response.success) {\r\n                            alert('Mission complete!');\r\n                        } else {\r\n                            alert('Something wrong!');\r\n                        }\r\n                    }, 'json');\r\n                } else {\r\n                    Helper.scrollTo(self.form.find('.error:first'), -100);\r\n                }\r\n            });\r\n\r\n            $('[data-toggle-target]').click(function () {\r\n                let $this = $(this),\r\n                    $target = $($this.data('toggle-target'));\r\n\r\n                if ($target.length) {\r\n                    $target.slideToggle();\r\n                }\r\n            });\r\n\r\n            $('[data-toggle-target-required-fields]').click(function () {\r\n                let $this = $(this),\r\n                    $target = $($this.data('toggle-target-required-fields'));\r\n\r\n                if ($target.length) {\r\n                    if ($this.prop('checked')) {\r\n                        $target.find('input').prop('required', $this.prop('checked'));\r\n                        $target.slideToggle();\r\n                    } else {\r\n                        $target.slideToggle(function () {\r\n                            $target.find('input').prop('required', $this.prop('checked'));\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n\r\n            $('.input-field').on('input keyup keydown', 'input', function () {\r\n                let $this = $(this),\r\n                    value = $this.val();\r\n                if ($this.attr('required')) {\r\n                    self.validate($this, value);\r\n                }\r\n\r\n                self.autofillCityAndStreet($this);\r\n            });\r\n\r\n            self.validateCurrentValue();\r\n            $('input, select, textarea').on('focus', function () {\r\n                self.removeError($(this));\r\n            });\r\n        },\r\n        validateCurrentValue: function () {\r\n            let self = this,\r\n                fields = self.form.find('input, select, textarea');\r\n\r\n            fields.each(function () {\r\n                let $this = $(this),\r\n                    value = $this.val();\r\n\r\n                if ($this.attr('required') && typeof $this.attr('value') !== 'undefined' && $this.attr('value') !== '') {\r\n                    if ($this.attr('type') === 'text') {\r\n                        self.validate($this, value);\r\n                    }\r\n                } else {\r\n                    self.removeError($this);\r\n                }\r\n            });\r\n        },\r\n        validateForm: function () {\r\n            let self = this,\r\n                fields = self.form.find('input, select, textarea');\r\n            self.errors = [];\r\n            fields.each(function () {\r\n                let $this = $(this),\r\n                    value = $this.val();\r\n                if ($this.attr('required')) {\r\n                    if ($this.attr('type') === 'text') {\r\n                        self.validate($this, value);\r\n                    }\r\n                } else {\r\n                    self.removeError($this);\r\n                }\r\n            });\r\n            return !self.errors.length;\r\n        },\r\n        validate: function (input, value) {\r\n            let self = this;\r\n            if (value !== '') {\r\n                if (input.hasClass('validate-email')) {\r\n                    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) {\r\n                        self.setValid(input);\r\n                    } else {\r\n                        self.setError(input, self.errorsMessages.incorrect_email);\r\n                    }\r\n                } else if (input.hasClass('validate-zip')) {\r\n                    if (/^\\d{2}-\\d{3}$/.test(value)) {\r\n                        self.setValid(input);\r\n                    } else {\r\n                        self.setError(input, self.errorsMessages.zip_format);\r\n                    }\r\n                } else if (input.hasClass('validate-phone')) {\r\n                    if (/^\\+48\\d{9}$/.test(value)) {\r\n                        self.setValid(input);\r\n                    } else {\r\n                        self.setError(input, self.errorsMessages.phone_format);\r\n                    }\r\n                } else if (input.hasClass('validate-alphabets')) {\r\n                    if (/^[A-Za-z]+$/.test(value)) {\r\n                        self.setValid(input);\r\n                    } else {\r\n                        self.setError(input, self.errorsMessages.alphabets);\r\n                    }\r\n                } else if (input.hasClass('validate-country')) {\r\n                    if (/^(польща|poland)$/.test(value.toLowerCase())) {\r\n                        self.setValid(input);\r\n                    } else {\r\n                        self.setError(input, self.errorsMessages.alphabets);\r\n                    }\r\n                } else if (input.hasClass('validate-city')) {\r\n                    if (/^[A-Za-z\\s]+$/.test(value) && !(/^[\\s\\d]+$/.test(value))) {\r\n                        self.setValid(input);\r\n                    } else {\r\n                        self.setError(input, self.errorsMessages.incorrect_city);\r\n                    }\r\n                } else if (input.hasClass('validate-street')) {\r\n                    if (/^[A-Za-z\\s\\d]+$/.test(value) && !(/^[\\s\\d]+$/.test(value))) {\r\n                        self.setValid(input);\r\n                    } else {\r\n                        self.setError(input, self.errorsMessages.incorrect_street);\r\n                    }\r\n                } else {\r\n                    self.setValid(input);\r\n                }\r\n            } else {\r\n                self.setError(input, self.errorsMessages.empty_value);\r\n            }\r\n        },\r\n        setError: function (input, message) {\r\n            let $parent = input.parent();\r\n            $parent.addClass('error').removeClass('valid').find('.error-message').remove();\r\n            $parent.append($('<span>').addClass('error-message').text(message));\r\n            this.errors.push(input.attr('name'));\r\n        },\r\n        removeError: function (input) {\r\n            input.parent().removeClass('error').find('.error-message').remove();\r\n        },\r\n        setValid: function (input) {\r\n            input.parent().removeClass('error').addClass('valid').find('.error-message').remove();\r\n        },\r\n        autofillCityAndStreet: function (input) {\r\n            let self = this;\r\n            if (/country|zip$/.test(input.attr('name')) && input.parent().hasClass('valid')) {\r\n                let $parent = input.parents('.address-fields:first'),\r\n                    $country = $parent.find('input[name$=\"country\"]'),\r\n                    $zip = $parent.find('input[name$=\"zip\"]'),\r\n                    $city = $parent.find('input[name$=\"city\"]'),\r\n                    $street = $parent.find('input[name$=\"street\"]');\r\n\r\n                if ($country.parent().hasClass('valid') && $zip.parent().hasClass('valid')) {\r\n                    self.getZipInfo($country.val(), $zip.val(), function (info) {\r\n                        if (info) {\r\n                            $city.val(info.place);\r\n                            $street.val(info.province);\r\n                            self.validate($city);\r\n                            self.validate($street);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        getZipInfo: function (country, zip, callback) {\r\n            country = 'PL';\r\n            $.getJSON('/zipcodes.pl.json', function (data) {\r\n                let find = data.filter(element => element.zipcode === zip && element.country_code === country);\r\n                let zipInfo = find.length ? find[0] : false;\r\n                callback(zipInfo);\r\n            });\r\n        },\r\n    };\r\n\r\n    Checkout.init();\r\n});\r\n"]}